{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xC87EC723EcDB0072d2FB21030DB59c8F51869410",
    "txHash": "0xd04cebbcdbfc5927a7f0c44544cfbca8a1e5350e53a10c35db44e2fb4b8e4bc3"
  },
  "proxies": [
    {
      "address": "0x3e2d21BE01E1B318c24aD60224A3062aD22f3843",
      "txHash": "0x53f6d82d34ba161d80288252615bbfc5aeeb73de589b635b9204bb686b6ff464",
      "kind": "transparent"
    },
    {
      "address": "0x4C9D94A55B420C88ef61ee040C53d3127b12E45d",
      "txHash": "0x063238cf7ebab95e986ae14ce04da4a3fbc56351b2c7463c4db3a603c9666623",
      "kind": "transparent"
    },
    {
      "address": "0x89f1606b781aB7c3b5e94AD74C67c00918663Fbc",
      "txHash": "0x144a352e8426b10cc5c3ea7d224cf58d396ba504e49870a8c0b7171c9ecc11ae",
      "kind": "transparent"
    },
    {
      "address": "0x5FC1A5551F1aDed682e6A221AD771b85B84eD9C1",
      "txHash": "0x2ecd303b534e43f01677e78456d0f88697273d217ddf9e4f9d5a4a37e95de742",
      "kind": "transparent"
    },
    {
      "address": "0x1246915AFd1E766c895f10f09d957F1d62327B01",
      "txHash": "0x6bb0337d0cad97ade72091cfc98c0753686ac2b708a8ec851a9fdae4a6de3cee",
      "kind": "transparent"
    },
    {
      "address": "0xD9F397C66810C75639be97f4cabc0727066bd8df",
      "txHash": "0x69e17ed6e89919c5e54f145984816ba05a61eec6c912b9cf211f5b194c58a328",
      "kind": "transparent"
    }
  ],
  "impls": {
    "af2feef0df72a9212648fa456a49ae69bcedf66875e717dc96c1f4a0e87262c7": {
      "address": "0x025F265a38E5c2EB2c9b483d63ad4Aa7D47ea3A1",
      "txHash": "0x54bffd0b8e47b1b3a4df0ce0b6da930190040318e4ff8c62dfc6828c2a4d0a5d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:361"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2b0589214f5db905ed2ec33913e791718c643f15cf0cbfc4f3800233f7cc92d4": {
      "address": "0x2D34E15A750D890330C195bf420068fC504B7797",
      "txHash": "0xea0e401993bf8bdea87a4793d0311915571e9105bacadd5c1bb83ee70c9cb9c9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:361"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d8f41119bc24d7d28c7ede1e1a280d5ee63bd6b6d76bb58e0be4f5a4b69f48c4": {
      "address": "0x4Ea0EeBD46da2Ef31349EB4C0FA94b2911095D0B",
      "txHash": "0x19fa4f0a10706af77a3a1118ca4c583a302ba0f6f477ef71a4de276e78db7131",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "NftHero",
            "label": "diamondInstance",
            "type": "t_contract(Diamond)2888",
            "src": "..\\site\\project:\\contracts\\NftHero.sol:13"
          },
          {
            "contract": "NftHero",
            "label": "heroPoolInstance",
            "type": "t_contract(HeroPool)6136",
            "src": "..\\site\\project:\\contracts\\NftHero.sol:14"
          },
          {
            "contract": "NftHero",
            "label": "totalRandTimes",
            "type": "t_uint256",
            "src": "..\\site\\project:\\contracts\\NftHero.sol:17"
          },
          {
            "contract": "NftHero",
            "label": "countor",
            "type": "t_uint256",
            "src": "..\\site\\project:\\contracts\\NftHero.sol:20"
          },
          {
            "contract": "NftHero",
            "label": "herosType",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\site\\project:\\contracts\\NftHero.sol:21"
          },
          {
            "contract": "NftHero",
            "label": "cardDB",
            "type": "t_mapping(t_uint256,t_struct(HeroInfo)3697_storage)",
            "src": "..\\site\\project:\\contracts\\NftHero.sol:34"
          },
          {
            "contract": "NftHero",
            "label": "tokenDB",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\site\\project:\\contracts\\NftHero.sol:36"
          },
          {
            "contract": "NftHero",
            "label": "userRandtimes",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\site\\project:\\contracts\\NftHero.sol:38"
          }
        ],
        "types": {
          "t_contract(Diamond)2888": {
            "label": "contract Diamond"
          },
          "t_contract(HeroPool)6136": {
            "label": "contract HeroPool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(HeroInfo)3697_storage)": {
            "label": "mapping(uint256 => struct NftHero.HeroInfo)"
          },
          "t_struct(HeroInfo)3697_storage": {
            "label": "struct NftHero.HeroInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "li",
                "type": "t_uint256"
              },
              {
                "label": "min",
                "type": "t_uint256"
              },
              {
                "label": "zhi",
                "type": "t_uint256"
              },
              {
                "label": "lv",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4e04b74dd86ad6f39c0f0d4b10378b688ac8ead53d2a6f478a743b7feb659649": {
      "address": "0x009E14d930722D389f750Ed41A993774D5145E49",
      "txHash": "0x3cd17c2e5993096c45d533e81bb69f2364a61fe20b2eb07d85c348a41fa42471",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Base",
            "label": "_implementation",
            "type": "t_address",
            "src": "..\\site\\project:\\contracts\\proxy\\Base.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4b8e88be501728426a4ec89040d9bd25866ec0af8078c4ab51b719424cf6f16c": {
      "address": "0xB2b503604e7AF9E9D50Ddf79B337be5AF16a4b80",
      "txHash": "0x012fd9371e0c878dabc5c9585b844dc2dfc54310fad822ac0bce5ecb35567cfa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "Stake",
            "label": "goldInstance",
            "type": "t_contract(Gold)2948",
            "src": "..\\site\\project:\\contracts\\Stake.sol:17"
          },
          {
            "contract": "Stake",
            "label": "nftHeroInst",
            "type": "t_contract(NftHero)4355",
            "src": "..\\site\\project:\\contracts\\Stake.sol:18"
          },
          {
            "contract": "Stake",
            "label": "receipt",
            "type": "t_mapping(t_uint256,t_struct(stake)4389_storage)",
            "src": "..\\site\\project:\\contracts\\Stake.sol:27"
          },
          {
            "contract": "Stake",
            "label": "userTokens",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\site\\project:\\contracts\\Stake.sol:29"
          },
          {
            "contract": "Stake",
            "label": "params",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "..\\site\\project:\\contracts\\Stake.sol:34"
          }
        ],
        "types": {
          "t_contract(Gold)2948": {
            "label": "contract Gold"
          },
          "t_contract(NftHero)4355": {
            "label": "contract NftHero"
          },
          "t_mapping(t_uint256,t_struct(stake)4389_storage)": {
            "label": "mapping(uint256 => struct Stake.stake)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(stake)4389_storage": {
            "label": "struct Stake.stake",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "stakedFromBlock",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "blockBonus",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0dd5ef1f7cb3e11a57f4d637294b2b339d0dacc61ab92e089cd30ff742388d1d": {
      "address": "0xFFE0C28b7037335f07D831Eea687F638A704AFd8",
      "txHash": "0x56af75bad057a8443bb532a830533b1ee0f3957dbd64e57596f61758803e45cf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\site\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "Marketplace",
            "label": "diamondInstance",
            "type": "t_contract(Diamond)2888",
            "src": "..\\site\\project:\\contracts\\Marketplace.sol:18"
          },
          {
            "contract": "Marketplace",
            "label": "nftHeroInst",
            "type": "t_contract(NftHero)4355",
            "src": "..\\site\\project:\\contracts\\Marketplace.sol:19"
          },
          {
            "contract": "Marketplace",
            "label": "receipt",
            "type": "t_mapping(t_uint256,t_struct(product)2980_storage)",
            "src": "..\\site\\project:\\contracts\\Marketplace.sol:27"
          },
          {
            "contract": "Marketplace",
            "label": "userTokens",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\site\\project:\\contracts\\Marketplace.sol:29"
          },
          {
            "contract": "Marketplace",
            "label": "params",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "..\\site\\project:\\contracts\\Marketplace.sol:34"
          }
        ],
        "types": {
          "t_contract(Diamond)2888": {
            "label": "contract Diamond"
          },
          "t_contract(NftHero)4355": {
            "label": "contract NftHero"
          },
          "t_mapping(t_uint256,t_struct(product)2980_storage)": {
            "label": "mapping(uint256 => struct Marketplace.product)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(product)2980_storage": {
            "label": "struct Marketplace.product",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
